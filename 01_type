
a = 10
print(a)

b = 20
print(b)

# 주석 : 사람이 볼 수 있게 작성
"""
여러 줄 주석
한번에 여러 줄 주석 사용
"""

print(type(a))

import keyword

# 예약어 : 프로그램이 사용하기 위해 미리 저장해놓은 단어
# 변수로 해당 단어 사용 금지!
print(keyword.kwlist)

a = 10
print(a)

b = None
print(b)

# print(c)

print(type(b))

# id()
print(id(b))
print(id(a))

# singleton (객체가 하나만 만들어진다.)
c = None
print(id(c))

# int : 정수

a = 100
print(a)
print(type(a))

# float : 실수

b = 200.2
print(b)
print(type(b))

# int + float : float
c = a + b
print(c)
print(type(c))

# complex : real + imaginary (실수부 + 허수부)
d = 1 + 2j
print(d)
print(type(d))

# 생성자
e = int(200)
print(e)
print(type(e))

f = float(300)
print(f)
print(type(f))

g = complex(3, 4)
print(g)
print(type(g))

# 논리 : 참 True / 거짓 False
h = True
print(h)
i = False
print(i)

# bool
print(type(h))

print(True == True)

# c언어에서 true : 1 / false : 0 -> python에서도 동일
print(1 == True)
print(0 == i)

# 진법
# 2 (0b)
binary = 0b1111
print(binary)
# 8 (0o)
octal = 0o77
print(octal)
# 16 (0x)
hexadecimal = 0xff
print(hexadecimal)

print(type(binary))
print(type(octal))
print(type(hexadecimal))

# 여러 개의 값을 효과적으로 관리하기 위한 객체들 : list, tuple, set, dict
# sequence : 순서가 있는 값들을 가진 객체
# list : 순서 o, 중복 o

# 변수 = [값]
a = [5, 4, 3, 2, 1, 3, 2]
print(a)
print(a[2])
a.append(9)
print(a)
print(type(a))

# 변수 = list()
b = list()
b.append(7)
b.append(9)
b.append(8)
print(b)
print(type(b))

# list[index]
# b라는 list에서 숫자 9를 사용하고 싶다.
print(b[1])

# dir : 객체 속성, 메서드 확인
print(dir(list))
# __??__ : special method (magic method)
# __iter__ : 반복가능한 (iterable) -> iterator (나중에 배움)

print(a)
print(a.reverse())
print(a)

a.sort()
print(a)

print(len(a))

# list + list
c = a + b
print(c)
print(type(c))

print(c * 3)

c.insert(5, 3)
print(c)

c.insert(5, 9)
print(c)

# c 변수 안에 5번지 (index 5) 의 값을 0으로 바꾸고 싶다.
c[5] = 0
print(c)

# list 중첩
d = [1, 2, 3, ['a', 'b', 'c'], 'd', 4, '5']
print(d)
print(type(d))

# d라는 변수 안에 있는 문자 c 를 출력하고 싶다.
print(d[3])
print(d[3][2])

# tuple : list와 거의 같음. (변하지 않는 list)

# (값)
a = (1, 2, 3)
print(a)
print(type(a))

# tuple()
b = tuple([1, 2, 3])
print(b)
print(type(b))

# a.append(4)
# print(a)
# b[1] = 4
# print(b)

c = a + b
print(c)
print(type(c))

# tuple -> list
d = list(c)
print(d)
print(type(d))
d[3] = 4
print(d)
d.append(5)
print(d)

# list -> tuple
e = tuple(d)
print(e)
print(type(e))

# e.append(6)

# packing
f = 1, 2, 3
print(f)

# unpacking
g, h, i = f
print(g)
print(h)
print(i)

# str : string
# text sequence

# single quotation '
a = 'hello, world!'
print(a)
print(type(a))

print('a')

# b라는 변수에 hello, 'python'! 대입해서 출력하고 싶다.
# escape sequence (escape character)
b = 'hello, \'python\'!'
print(b)
print(type(b))

# single * 3
c = '''hello
python
    abc
        def'''
print(c)

d = "Hello, Python!"
print(d)
print(type(d))

e = """안녕하세요
    저는
        파이썬이 재밌습니다.
"""
print(e)

# 혼합 ', "
f = 'hello, "python"!'
print(f)
g = "hello, 'python'!"
print(g)

h = "hello, \npython!"
print(h)
i = "hello, \\npython!"
print(i)

# 생성자
j = str("hello, world!")
print(j)
print(type(j))

# raw string
k = "c:\test"
print(k)
l = r"c:\test"
print(l)

print("hello" + "world")
print("hello" * 3 + "world")

# print("hello" - "o")
# print("1" + 5)

# 집합
# 순서 x, 중복 x

a = {'1', '5', '2', '3', '4', '3', '1'}
print(a)
print(type(a))

# hashing (hash table)
b = {1, 5, 2, 3, 4, 3, 1}
print(b)
print(type(b))

# 생성자
c = set([1, 2, 3, 4, 5])
print(c)
print(type(c))

c.add(6)
print(c)

# 생성자에 iterable 한 객체를 넣으면...
d = set("hello, world!")
print(d)

# 합집합
left = {'a', 'b', 'c', 'd'}
right = {'c', 'd', 'e', 'f'}
print(left.union(right))
print(left | right)

# 교집합
print(left.intersection(right))
print(left & right)

# 차집합
print(left.difference(right))
print(left - right)


# frozenset
e = frozenset([1, 2, 3, 4, 5])
print(e)
print(type(e))

# e.add(6)

# dictionary
# key : value (key를 통해서 value를 관리)
# 순서 o 중복 (key x / value o)
# -> python 3.6 이후부터 순서 o

# {k : v}
dict01 = {'a': 1, 'c': 2, 'b': 3}
print(dict01)
print(type(dict01))

dict01['d'] = 4
print(dict01)

# c라는 키 안에 있는 값을 출력하고 싶다.
print(dict01['c'])

# 생성자
dict02 = dict(a=1, b=2, c=3)
print(dict02)
print(type(dict02))

# list 중첩
dict03 = dict([[1, 'a'], [2, 'b']])
print(dict03)


print(dict01.keys())
print(type(dict01.keys()))
print(list(dict01.keys()))

print(dict01.values())
print(type(dict01.values()))
print(list(dict01.values()))

# mutable : list, set, dict
a = [1, 2, 3, 4, 5]
print(a)
print(id(a))
a.append(6)
print(a)
print(id(a))

# immutable : numbers, tuple, str, frozenset
b = 10
print(b)
print(id(b))
b = 10 + 1
print(b)
print(id(b))

# print()

name = 'dongheon'
age = 100

# print(name + age)
print(name + str(age))
print(name, age)
print(name, age, sep='!!!')
print(name, age, end='\t')
print('abcd')

# name:dongheon     age:100
#
print('name', name, sep=':', end='\t')
print('age', age, sep=':')

# % values
print('name: %s' % name)
print('name: %s \t age: %d' % (name, age))

# str.format()
result = 'name: {} \t age: {}'.format(name, age)
print(result)


# f string
print(f'name: {name} \t age: {age}')
